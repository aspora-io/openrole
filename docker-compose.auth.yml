version: '3.8'

services:
  # Frontend web server
  openrole-web:
    build:
      context: ./deployment
      dockerfile: Dockerfile
    container_name: openrole-web
    restart: unless-stopped
    ports:
      - "8081:80"
    depends_on:
      - openrole-api
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - openrole-net

  # Backend API server
  openrole-api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile.simple
    container_name: openrole-api
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@openrole-db:5432/openrole}
      - JWT_SECRET=${JWT_SECRET:-Hw00tSuklDbLH4QDfmdoOuQhu6WwToWJ53yxOuDaeG8=}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-829361687275-s8gh4fatu8fvleqjlv1e4r2oc971vjt4.apps.googleusercontent.com}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-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}
      - LINKEDIN_CLIENT_ID=${LINKEDIN_CLIENT_ID:-placeholder}
      - LINKEDIN_CLIENT_SECRET=${LINKEDIN_CLIENT_SECRET:-placeholder}
    depends_on:
      - openrole-db
    networks:
      - openrole-net

  # PostgreSQL database
  openrole-db:
    image: postgres:15-alpine
    container_name: openrole-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=openrole
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./database/migrations/008-oauth-columns.sql:/docker-entrypoint-initdb.d/02-oauth.sql:ro
    ports:
      - "5432:5432"
    networks:
      - openrole-net

  # Redis for session/cache management (optional)
  openrole-redis:
    image: redis:7-alpine
    container_name: openrole-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - openrole-net

volumes:
  postgres_data:
  redis_data:

networks:
  openrole-net:
    driver: bridge