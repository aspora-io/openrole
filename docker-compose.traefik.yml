version: '3.8'

services:
  openrole-web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile.simple
    container_name: openrole-web
    restart: unless-stopped
    networks:
      - traefik
      - openrole-internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.openrole-web.rule=Host(`openrole.net`) || Host(`www.openrole.net`)"
      - "traefik.http.routers.openrole-web.entrypoints=websecure"
      - "traefik.http.routers.openrole-web.tls.certresolver=letsencrypt"
      - "traefik.http.services.openrole-web.loadbalancer.server.port=3000"
      - "traefik.docker.network=traefik"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.openrole.net

  openrole-api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile.simple
    container_name: openrole-api
    restart: unless-stopped
    networks:
      - traefik
      - openrole-internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.openrole-api.rule=Host(`api.openrole.net`)"
      - "traefik.http.routers.openrole-api.entrypoints=websecure"
      - "traefik.http.routers.openrole-api.tls.certresolver=letsencrypt"
      - "traefik.http.services.openrole-api.loadbalancer.server.port=3001"
      - "traefik.docker.network=traefik"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@openrole-db:5432/openrole
      - REDIS_URL=redis://openrole-redis:6379
      - JWT_SECRET=your-secret-key-change-in-production
    depends_on:
      - openrole-db
      - openrole-redis

  openrole-db:
    image: postgres:16-alpine
    container_name: openrole-db
    restart: unless-stopped
    networks:
      - openrole-internal
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=openrole
    volumes:
      - postgres_data:/var/lib/postgresql/data

  openrole-redis:
    image: redis:7-alpine
    container_name: openrole-redis
    restart: unless-stopped
    networks:
      - openrole-internal

volumes:
  postgres_data:

networks:
  traefik:
    external: true
  openrole-internal:
    driver: bridge
    name: openrole-network